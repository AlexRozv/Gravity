{"version":3,"sources":["Components/img/Placeholdervideo.png","Components/img/hero-img.png","Components/NavBar.js","Components/Hero.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","useStyles","makeStyles","theme","root","maxWidth","appBar","backgroundColor","toolBar","flexGrow","justifyContent","marginRight","spacing","marginLeft","logoText","color","search","NavBar","classes","Container","className","disableGutters","AppBar","position","Toolbar","Typography","IconButton","display","paddingRight","heroContent","marginTop","zIndex","heroHeader","fontFamily","fontStyle","fontWeight","fontSize","letterSspacing","lineHeight","marginBottom","simpleText","opacity","heroMedia","height","card","maxHeight","width","getStarted","alignSelf","videoCard","playButton","margin","Hero","Button","variant","CardMedia","image","require","style","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.60a2998e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Placeholdervideo.c73e6d97.png\";","module.exports = __webpack_public_path__ + \"static/media/hero-img.fd9e41f8.png\";","import React from \"react\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    maxWidth: 1360,\r\n  },\r\n  appBar: {\r\n    backgroundColor: \"#F4F4F4\",\r\n  },\r\n  toolBar: {\r\n    flexGrow: 1,\r\n    justifyContent: \"space-between\",\r\n    marginRight: theme.spacing(5),\r\n    marginLeft: theme.spacing(5),\r\n  },\r\n  logoText: {\r\n    color: \"#222222\",\r\n  },\r\n  search: {},\r\n}));\r\n\r\nexport default function NavBar() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Container className={classes.root} disableGutters>\r\n      <AppBar position=\"static\" className={classes.appBar}>\r\n        <Toolbar className={classes.toolBar}>\r\n          <Typography className={classes.logoText}>Gravity</Typography>\r\n          <IconButton className={classes.search}>\r\n            <SearchIcon />\r\n          </IconButton>\r\n          <IconButton>\r\n            <MenuIcon />\r\n          </IconButton>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </Container>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport PlayCircleFilledIcon from \"@material-ui/icons/PlayCircleFilled\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    maxWidth: 1360,\r\n    display: \"flex\",\r\n    paddingRight: 0,\r\n  },\r\n  heroContent: {\r\n    marginTop: theme.spacing(7),\r\n    marginLeft: theme.spacing(5),\r\n    maxWidth: \"45%\",\r\n    paddingRight: theme.spacing(5),\r\n\r\n    zIndex: \"1\",\r\n  },\r\n  heroHeader: {\r\n    fontFamily: \"Fira Sans\",\r\n    fontStyle: \"normal\",\r\n    fontWeight: \"bold\",\r\n    fontSize: 60,\r\n    letterSspacing: -1,\r\n    color: \"#151515\",\r\n    lineHeight: \"70px\",\r\n    marginBottom: theme.spacing(7),\r\n  },\r\n  simpleText: {\r\n    fontFamily: \"Fira Sans\",\r\n    fontStyle: \"normal\",\r\n    fontWeight: \"normal\",\r\n    fontSize: 18,\r\n    color: \"#222222\",\r\n    opacity: \"0.7\",\r\n    paddingRight: theme.spacing(10),\r\n  },\r\n  heroMedia: {\r\n    height: 840,\r\n    flexGrow: 1,\r\n  },\r\n  card: {\r\n    flexGrow: 1,\r\n    maxHeight: \"50%\",\r\n    width: \"150%\",\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n    marginTop: theme.spacing(7),\r\n  },\r\n  getStarted: {\r\n    alignSelf: \"flex-start\",\r\n  },\r\n  videoCard: {\r\n    width: 400,\r\n    height: 225,\r\n    display: \"flex\",\r\n  },\r\n  playButton: {\r\n    margin: \"auto\",\r\n  },\r\n}));\r\n\r\nexport default function Hero() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Container className={classes.root}>\r\n      <Container className={classes.heroContent} disableGutters>\r\n        <div>\r\n          <Typography className={classes.heroHeader}>\r\n            Work around you and your team\r\n          </Typography>\r\n          <Typography className={classes.simpleText}>\r\n            From ads that dance or sing to MTV-like commercials, online\r\n            advertisers are now using a new type of technology “rich media” to\r\n            attract consumers.\r\n          </Typography>\r\n        </div>\r\n        <Container className={classes.card} disableGutters>\r\n          <Button\r\n            className={classes.getStarted}\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n          >\r\n            GET STARTED\r\n          </Button>\r\n          <CardMedia\r\n            className={classes.videoCard}\r\n            image={require(\"./img/Placeholdervideo.png\")}\r\n          >\r\n            <IconButton className={classes.playButton}>\r\n              <PlayCircleFilledIcon style={{ fontSize: 80 }} />\r\n            </IconButton>\r\n          </CardMedia>\r\n        </Container>\r\n      </Container>\r\n      <CardMedia\r\n        className={classes.heroMedia}\r\n        image={require(\"./img/hero-img.png\")}\r\n      ></CardMedia>\r\n    </Container>\r\n  );\r\n}\r\n","import React from \"react\";\nimport NavBar from \"./Components/NavBar\";\nimport Hero from \"./Components/Hero\";\n\nfunction App() {\n  return (\n    <div>\n      <NavBar />\n      <Hero />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}